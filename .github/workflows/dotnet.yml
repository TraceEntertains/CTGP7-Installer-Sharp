name: .NET
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        configuration: [Debug, Release, Dev Debug, Dev Release, Debug Bench]
        include:
        - os: ubuntu-latest
          OS_NAME: Linux x64
          DOTNET_RUNTIME_IDENTIFIER: linux-x64
          RELEASE_ZIP_OS_NAME: linux_x64

        - os: macOS-latest
          OS_NAME: macOS x64
          DOTNET_RUNTIME_IDENTIFIER: osx-x64
          RELEASE_ZIP_OS_NAME: osx_x64

        - os: windows-latest
          OS_NAME: Windows x64
          DOTNET_RUNTIME_IDENTIFIER: win-x64
          RELEASE_ZIP_OS_NAME: win_x64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build -c "${{ matrix.configuration }}" --no-restore
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: true
      
      - name: Test
        run: dotnet test --no-build -c "${{ matrix.configuration }}"
      
      - name: Publish Installer
        run: dotnet publish -c "${{ matrix.configuration }}" -r "${{ matrix.DOTNET_RUNTIME_IDENTIFIER }}" --output ./publish --no-restore
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: true
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.RELEASE_ZIP_OS_NAME }}-${{ matrix.configuration }}
          path: publish
